@model List<FTL_HRMS.ViewModels.VMMenuByRole>
@{
    ViewBag.Title = "Add a new Role";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


<hr />
    <div class="row">
        <div class="col-md-6 col-md-offset-2">
            <div class="checkbox">
                <label>@Html.CheckBox("CanEdit", false, new { @id = "CanEdit" }) Can Edit</label>
            </div>
            <div class="checkbox">
                <label>@Html.CheckBox("CanDelete", false, new { @id = "CanDelete" }) Can Delete</label>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6 col-md-offset-2">
            <div class="row">
                <div class="col-md-12 col-sm-12">
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary()
                    <div class="col-md-4 lbl_txt_align">
                        <nobr><b>Role Name:</b></nobr>
                    </div>
                    <div class="col-md-8 mar-bottom">
                        <input type="text" class="form-control student_form" name="RoleName" required/>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="portlet light bordered">
                        <div class="portlet-title">
                            <div class="caption">
                                <i class="icon-bubble font-green-sharp"></i>
                                <span class="caption-subject font-green-sharp bold uppercase">Assign Menus</span>
                            </div>
                        </div>
                        <div class="portlet-body">

                            @if (Model != null)
                            {
                                List<FTL_HRMS.ViewModels.VMMenuByRole> par = Model.Where(t => t.ParentId == null).ToList();

                                List<FTL_HRMS.ViewModels.VMMenuByRole> child = null;
                                <div>
                                    @for (int i = 0; i < par.Count; i++)
                                    {
                                        child = Model.Where(t => t.ParentId == par[i].Id).ToList();
                                        List<int> TotalChildArray = new List<int>();
                                        List<int> TotalSelectedItems = new List<int>();
                                        string TotalChild = string.Empty;

                                        <div>



                                            @*<input onclick="selectAll(@par[i].Id)" name="checkbox1" id="checkbox1_@par[i].Id" data-parsley-multiple="groups" data-parsley-mincheck="1" type="checkbox">
                                            <label for="checkbox1_@par[i].Id"><a onclick="sub_menu_display_view('@par[i].Id')"> @par[i].MenuItemName </a></label>*@

                                            @Html.CheckBox("checkbox1", new { @id = "checkbox1_" + par[i].Id, data_parsley_multiple = "groups", data_parsley_mincheck = "1", @onChange = "selectAll("+par[i].Id+")" })

       <label for="checkbox1_@par[i].Id"><a onclick="sub_menu_display_view('@par[i].Id')"> @par[i].MenuItemName </a></label>

                                            @Html.Hidden("main_item",par[i].Id)

                                        </div>


                                        foreach (var ch in child)
                                        {
                                            TotalChildArray.Add(ch.Id);
                                            <div style="padding-left: 30px;">
                                                @* <input onclick="auto_menu_check('@par[i].Id', '@ch.Id')" id="checkbox_@ch.Id" name="sub_checkbox[@ch.Id]" type="checkbox" value="@ch.Id">
                                                    <label for="checkbox_@ch.Id"> @ch.MenuItemName </label>*@

                                                @Html.CheckBox("sub_checkbox", new { @id = "checkbox_" + ch.Id, @onclick = "auto_menu_check('" + par[i].Id + "'," + "'" + ch.Id + "')" })
                                                <label for="checkbox_@ch.Id"> @ch.MenuItemName </label>

                                                @Html.Hidden("sub_item",ch.Id)


                                            </div>

                                        }
                                        TotalChild = string.Join(",", TotalChildArray);

                                        <input type="hidden" name="total_submenu" id="total_submenu_@par[i].Id" value="@TotalChild">
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <input type="hidden" name="total_selected" value="" id="total_selected">
                <input class="col-md-offset-4 btn btn-default" id="submit-btn" type="submit" onclick="AddRole();" value="Submit" />
            </div>
        </div>
    </div>


<script type="text/javascript">

  
    function AddRole() {
        var MnuIDS = [];
        var send = [];
        var CanEdit = false;
        var CanDelete = false;
        $.each($('input[type="checkbox"]:checked'), function (key, value) {
            MnuIDS.push($(this).attr("id"));
        });

        var i = 0;
        for (; i < MnuIDS.length; i++) {

            if (MnuIDS[i].includes("checkbox1_")) {
                var temp = MnuIDS[i].split("checkbox1_");

                send.push(temp[1]);

            }
            else if (MnuIDS[i].includes("checkbox_")) {

                var temp2 = MnuIDS[i].split("checkbox_");
                send.push(temp2[1]);
            }
        }
        if (send == null || send == "") {
            alert("Please select atleast one menu item.");
        }
        else {
            if ($("#CanEdit").is(":checked")) {
                CanEdit = true;
            }
            if ($("#CanDelete").is(":checked")) {
                CanDelete = true;
            }
            $.ajax({
                url: "/Roles/AddNewRole",
                method: "POST",
                data: {
                    CanEdit: CanEdit,
                    CanDelete: CanDelete,
                    RoleName : $("input[name=RoleName]").val(),
                    TotalMnuItem: send.join()
                },
                error: function (response) {
                    alert(response);
                },
                success: function (response) {
                    alert(response);
                }
            });
        }
    };

    function auto_menu_check(menuId, submenuId) {
        var arr = null;
        var res = null;
        if (document.getElementById("checkbox_" + submenuId).checked == true) {
            document.getElementById("checkbox1_" + menuId).checked = true;
            $("#checkbox1_" + menuId).parent().addClass('checked');

        }

        else {
            res = [];
        }
    };
    function sub_menu_display_view(menuId) {
        document.getElementById('sub_menu_dispaly' + menuId).style.display = "inline";
    };
    function selectAll(menuId) {
        if (document.getElementById("checkbox1_" + menuId).checked == true) {
            var totalSubMenu = document.getElementById('total_submenu_' + menuId).value;

            var totalSubMenuArray = totalSubMenu.split(",");
            for (var i = 0; i < totalSubMenuArray.length; i++) {
                document.getElementById("checkbox_" + totalSubMenuArray[i]).checked = true;
                $("#checkbox_" + totalSubMenuArray[i]).parent().addClass('checked');
            }
        }
        if (document.getElementById("checkbox1_" + menuId).checked == false) {
            var totalSubMenu = document.getElementById('total_submenu_' + menuId).value;
            var totalSubMenuArray = totalSubMenu.split(",");
            for (var i = 0; i < totalSubMenuArray.length; i++) {
                document.getElementById("checkbox_" + totalSubMenuArray[i]).checked = false;
                $("#checkbox_" + totalSubMenuArray[i]).parent().removeClass('checked');
            }
        }
    };

</script>
