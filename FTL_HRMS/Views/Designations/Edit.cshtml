@model FTL_HRMS.Models.Hr.Designation

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<div class='col-lg-12 col-md-12 col-sm-12 col-xs-12'>
    <div class="page-title">
        <div class="pull-left">
            <h1 class="title">Designation</h1>
        </div>
    </div>
</div>

<header class="panel_header">
    <h2 class="title pull-left">Add New Designation</h2>
    <div class="actions panel_actions pull-right">
        <i class="box_toggle fa fa-chevron-down"></i>
    </div>
</header>
<div class="content-body">
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="row">
                    @if (TempData["SuccessMsg"] != null)
                    {
                        <div class="alert alert-success alert-dismissable fade in">
                            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                            @TempData["SuccessMsg"]
                        </div>
                    }
                    @if (TempData["WarningMsg"] != null)
                    {
                        <div class="alert alert-danger alert-dismissable fade in">
                            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                            @TempData["WarningMsg"]
                        </div>
                    }
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Sl)
                    @Html.HiddenFor(model => model.Status)
                    @Html.HiddenFor(model => model.CreateDate)
                    @Html.HiddenFor(model => model.CreatedBy)
                    @Html.HiddenFor(model => model.UpdateDate)
                    @Html.HiddenFor(model => model.UpdatedBy)
                    <div class="col-md-offset-3">
                        <div class="btn-group col-md-offset-5">
                            <button type="button" class="btn btn-primary btn-sm" aria-expanded="false" onclick="location.href='@Url.Action("Index", "Designations" )'">Back To List</button>
                        </div>
                        <div>
                            @Html.LabelFor(model => model.Code)
                        </div>
                        <div>
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", style = "width:50%" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>

                        <div>
                            @Html.LabelFor(model => model.Name, new { @class = "required" })
                        </div>
                        <div>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", style = "width:50%", @required=true } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>


                        <div>
                            @Html.Label("Department Group", new { @class = "required" })
                        </div>
                        <div>
                            @Html.DropDownList("DepartmentGroupId", null, "Select Group", htmlAttributes: new { @class = "form-control", style = "width:50%", @id = "ddl_deptgroup", @name = "ddl_deptgroup", @onchange = "LoadDepartment();", @required = true })
                        </div>

                        <div>
                            @Html.LabelFor(model => model.DepartmentId, "Department", new { @class = "required" })
                        </div>
                        <div>
                            <select class="form-control" style="width:50%" id="ddl_dept" name="ddl_dept" required>
                                <option value="">Select Department</option>
                                <option value=@ViewBag.DepartmentId selected>@ViewBag.DepartmentName</option>
                            </select>
                        </div>

                        <div>
                            @Html.LabelFor(model => model.RoleName, "Role Name", new { @class = "required" })
                        </div>
                        <div>
                            @Html.DropDownList("RoleName", null, "Select Role", htmlAttributes: new { @class = "form-control", style = "width:50%", @required = true })
                        </div>
                       


                        <br />
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-9" style="margin-left:180px;">
                                <input type="submit" value="Update" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function LoadDepartment() {
        $.ajax({
            url: '/Departments/GetDepartmentByGroupId',
            method: 'POST',
            data: {
                DepartmentGroupId: $('#ddl_deptgroup').val(),
            },
            cache: false,
            error: function () {
                alert("An error occoured!");
            },
            success: function (response) {
                $('#ddl_dept').empty();
                $('#ddl_dept').append($('<option>', {
                    value: '',
                    text: 'Select Department'
                }));
                for (var i = 0; i < response.length; i++) {
                    var opt = new Option(response[i].Name, response[i].Sl);
                    $('#ddl_dept').append(opt);
                }
            }
        });
    };
</script>
